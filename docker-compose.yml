services:
  attachment-api:
    build:
      dockerfile: ./Dockerfile
    container_name: attachment-api
    scale: 0
    ports:
      - 3000:3000
    depends_on:
      postgres-attachment-api:
        condition: service_healthy
    command: /bin/sh -c "npx knex --env production migrate:latest && npm start"
    environment:
      - LOG_LEVEL=debug
      - DB_HOST=postgres-attachment-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=sqnc-attachment-api
      - IPFS_HOST=ipfs
      - IDENTITY_SERVICE_HOST=identity-service
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=sequence
      - IDP_INTERNAL_REALM=internal
      - IDP_EXTERNAL_REALM=external
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret

  postgres-attachment-api:
    image: postgres:17.5-alpine
    container_name: postgres-attachment-api
    ports:
      - 5432:5432
    volumes:
      - attachment-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-attachment-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-identity-service:
    image: postgres:17.5-alpine
    container_name: postgres-identity
    ports:
      - 5433:5432
    volumes:
      - identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity-service
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  sqnc-identity-service:
    image: digicatapult/sqnc-identity-service:v4.2.40
    container_name: identity-service
    depends_on:
      postgres-identity-service:
        condition: service_healthy
    command: /bin/sh -c "npm run db:migrate && npm start"
    ports:
      - 3002:3000
    environment:
      - API_HOST=sqnc-node
      - DB_HOST=postgres-identity-service
      - DB_PORT=5432
      - DB_NAME=sqnc-identity-service
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=sequence
      - IDP_INTERNAL_REALM=internal
  attachment-api-b:
    build:
      dockerfile: ./Dockerfile
    container_name: attachment-api-b
    ports:
      - 3003:3000
    depends_on:
      postgres-attachment-api-b:
        condition: service_healthy
    command: /bin/sh -c "npx knex --env production migrate:latest && npm start"
    volumes:
      - ./docker/config/credentials.json:/app/docker/config/credentials.json
    environment:
      - LOG_LEVEL=debug
      - DB_HOST=postgres-attachment-api-b
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=sqnc-attachment-api
      - IPFS_HOST=ipfs
      - IDENTITY_SERVICE_HOST=identity-service-b
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=sequence
      - IDP_INTERNAL_REALM=internal
      - IDP_EXTERNAL_REALM=external
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
      - CREDENTIALS_FILE_PATH=/app/docker/config/credentials.json
      - AUTHZ_WEBHOOK=http://mock-authz-b:3000
      - STORAGE_BACKEND_MODE=azure
      - S3_HOST=localstack
      - S3_PORT=4566
      - S3_REGION=eu-west-2
      - AZURE_HOST=azurite
      - AZURE_PORT=10000
      - STORAGE_ACCESS_KEY=devstoreaccount1
      - STORAGE_SECRET_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
      - STORAGE_PROTOCOL=http
      - STORAGE_BUCKET_NAME=test

  postgres-attachment-api-b:
    image: postgres:17.5-alpine
    container_name: postgres-attachment-api-b
    ports:
      - 5434:5432
    volumes:
      - attachment-api-storage-b:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-attachment-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
  sqnc-identity-service-b:
    image: digicatapult/sqnc-identity-service:v4.2.40
    container_name: identity-service-b
    depends_on:
      postgres-identity-service-b:
        condition: service_healthy
    command: /bin/sh -c "npm run db:migrate && npm start"
    ports:
      - 3004:3000
    environment:
      - API_HOST=sqnc-node-b
      - DB_HOST=postgres-identity-service-b
      - DB_PORT=5432
      - DB_NAME=sqnc-identity-service
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=sequence
      - IDP_INTERNAL_REALM=internal
      - LOG_LEVEL=debug

  postgres-identity-service-b:
    image: postgres:17.5-alpine
    container_name: postgres-identity-service-b
    ports:
      - 5435:5432
    volumes:
      - identity-storage-b:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity-service
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  sqnc-node-b:
    image: digicatapult/sqnc-node:v13.0.0
    container_name: node-b
    command: --base-path /data/ --dev --unsafe-rpc-external --rpc-max-connections 512 --rpc-cors all
    ports:
      - 9954:9944
    restart: on-failure

  sqnc-node:
    image: digicatapult/sqnc-node:v13.0.0
    container_name: node
    command: --base-path /data/ --dev --unsafe-rpc-external --rpc-max-connections 512 --rpc-cors all
    ports:
      - 30333:30333
      - 9944:9944
      - 9933:9933
    restart: on-failure

  ipfs:
    image: ipfs/go-ipfs:v0.35.0
    container_name: ipfs
    environment:
      - |
        IPFS_SWARM_KEY=/key/swarm/psk/1.0.0/
        /base16/
        0000000000000000000000000000000000000000000000000000000000000000
    ports:
      - 4001:4001
      - 8080:8080
      - 5001:5001
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
  localstack:
    image: localstack/localstack
    ports:
      - '4566:4566' # main API
    environment:
      - SERVICES=s3
      - EDGE_PORT=4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=eu-west-2
    volumes:
      - localstack_data:/var/lib/localstack

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 3080:8080
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
    command: start-dev --import-realm

  mock-authz-b:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/authzMock
    ports:
      - 3030:3000
    environment:
      - ALLOW=true

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - 10000:10000
    volumes:
      - ./azurite-data:/data
      - ./azurite-logs:/logs
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000 --location /data --debug /logs/debug.log

volumes:
  attachment-api-storage:
  identity-storage:
  attachment-api-storage-b:
  identity-storage-b:
  localstack_data:
